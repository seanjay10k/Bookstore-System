<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		 http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx.xsd
		  	http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd">


	<!-- To make Autowire via Annotation work. If this tag is removed, annotations 
		are ignored. -->
	<context:component-scan base-package="com.sp" />

	<!-- Transaction manager : This acts as an advice for transaction aspect -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
		autowire="byType" />


	<!-- Data Sources for connection pool using dbcp.BasicDataSource -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:file:database.dat;shutdown=true" />
		<property name="username" value="sa" />
		<property name="password" value="" />

	</bean>
	<!-- JPA EntityManagerFactory -->
	<bean id="entityManagerfactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">

		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
			</bean>

		</property>


	</bean>





	<!-- Proxies -->
	<aop:aspectj-autoproxy />


	<!-- Transaction Configuration -->
	<tx:annotation-driven />
	
		
<?ignore	Everything inside this ignore block can be deleted if every class mentioned here as bean is 
			annotated as @Component or @Service or @Repository or @Named 
			[@Named is from javax. Also, if using javax, @Autowired==@Inject]
			
	<!-- Dao  that requires hibernatetemplate is @Repository. @Repository comes from <context:component-scan/>
	Also, since this is spring project, first develop hibernate template then develop SessionFactory that requires dataSource which is the same 
	basicdatasource dbcp connection pool, packagestoscan which packages to scan.. ,hibernateproperties which are hibernate.show_key that logs
	all the sql generated by hibernate, and hibernate.hbm2ddl.auto that creates any table as required. 
	By default, hibernateTemplate requires a sessionFactory property which is autowired here -->	

	<!-- Dao Beans -->
	<bean id="bookDao"		class="com.sp.avalon.data.BookDaoCleanerJdbcImpl_AnnotatationAutowired"/>
		
		
	

	<!-- Service Beans -->
	<bean id="bookService"   class="com.sp.avalon.services.BookServiceProductionImpl_AnnotationAutowired" />
	


	<bean id="accountsService"   class="com.sp.avalon.services.AccountsServiceMockImpl_AnnotationAutowired" />

	<bean id="purchasingService"
		class="com.sp.avalon.services.PurchasingServiceImpl_AnnotationAutowired" />


	<!-- Production level Advice -->
	<bean id="performanceTimingAdvice"   class="com.sp.avalon.advice.PerformanceTimingAdviceProduction" />

?>





</beans>
	
	